# Configure the SmallRye Kafka connector
kafka.bootstrap.servers=localhost:9092

mp.messaging.incoming.nachweis-validiert.connector=smallrye-kafka
mp.messaging.incoming.nachweis-validiert.topic=nachweis
mp.messaging.incoming.nachweis-validiert.value.deserializer=ch.helvetia.evn.pojo.NachWeisDeserializer

mp.messaging.incoming.nachweis-uebermittelt.connector=smallrye-kafka
mp.messaging.incoming.nachweis-uebermittelt.topic=nachweis
mp.messaging.incoming.nachweis-uebermittelt.value.deserializer=ch.helvetia.evn.pojo.NachWeisDeserializer

# add a readiness health check to validate the connection to the broker
# you access the /health/ready endpoint of your application you will
# have information about the connection validation status.
quarkus.kafka.health.enabled=true

# Logging  see https://quarkus.io/guides/logging
# TODO only for development, for prod we will have to configure https://quarkus.io/guides/centralized-log-management
quarkus.log.level=INFO
quarkus.log.category."ch.helvetia.evn".level=DEBUG

# configure your datasource
# TODO HCP should have a way to not have this fix-coded here
quarkus.datasource.db-kind = postgresql
quarkus.datasource.username = postgres
quarkus.datasource.password = admin
quarkus.datasource.jdbc.url = jdbc:postgresql://localhost:5432/postgres

# drop and create the database at startup (use `update` to only update the schema)
# TODO ok for dev, to be contextualize for INTG, PROD
quarkus.hibernate-orm.database.generation = drop-and-create